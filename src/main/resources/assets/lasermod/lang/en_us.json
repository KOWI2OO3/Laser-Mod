{
	"block.lasermod.laser": "Laser",
	"block.lasermod.laser_catcher": "Laser Catcher",
	"block.lasermod.infuser": "Infuser",
	"block.lasermod.mod_station": "Modification Station",
	"block.lasermod.laser_projector": "Laser Projector",
	"block.lasermod.laser_controller": "Laser Controller",
	"block.lasermod.mirror": "Mirror",
	"block.lasermod.advanced_laser": "Advanced Laser (§4WIP§r)",
	"block.lasermod.precision_assembler": "Precision Assembler",
	"block.lasermod.device_hub": "Device Hub (§4WIP§r)",

	"item.lasermod.laser_crystal": "Laser Crystal",
	"item.lasermod.laser_tool_base": "Laser Tool Shell",
	"item.lasermod.ir_glasses": "IR Glasses",
	"item.lasermod.linker": "Linker",
	"item.lasermod.silicon_plate": "Silicon Upgrade Plate",
	"item.lasermod.printed_circuit_board": "Printed Circuit Board",
	"item.lasermod.silicon": "Silicon",
	"item.lasermod.manual": "Manual",

	"item.lasermod.laser_pickaxe": "Laser Pickaxe",
	"item.lasermod.laser_sword": "Laser Sword",
	"item.lasermod.laser_shovel": "Laser Shovel",
	"item.lasermod.laser_axe": "Laser Axe",
	"item.lasermod.laser_hoe": "Laser Hoe",
	"item.lasermod.laser_multitool": "Laser Omni Tool",

	"item.lasermod.laser_helmet": "Laser Helmet",
	"item.lasermod.laser_chestplate": "Laser Chestplate",
	"item.lasermod.laser_leggings": "Laser Leggings",
	"item.lasermod.laser_boots": "Laser Boots",

	"item.lasermod.upgrade_speed": "Speed Upgrade",
	"item.lasermod.upgrade_mining": "Mining Upgrade",
	"item.lasermod.upgrade_fire": "Fire Upgrade",
	"item.lasermod.upgrade_color": "Color Upgrade",
	"item.lasermod.upgrade_mode": "Mode Upgrade",
	"item.lasermod.upgrade_damage": "Damage Upgrade",
	"item.lasermod.upgrade_no_damage": "No Damage Upgrade",
	"item.lasermod.upgrade_silence": "Silence Upgrade",
	"item.lasermod.upgrade_pull": "Pull Upgrade",
	"item.lasermod.upgrade_push": "Push Upgrade",
	"item.lasermod.upgrade_distance": "Distance Upgrade",
	"item.lasermod.upgrade_airtight_seal": "Airtight Seal Upgrade",
	"item.lasermod.upgrade_capacity": "Capacity Upgrade",

	"item.upgrade.tooltip": "Can Be Used For: ",
	"item.upgrade.tooltip.tier": "Tier %s",
	"item.upgrade.tooltip.laser_tool": "Laser Tool",
	"item.upgrade.tooltip.laser_helmet": "Laser Helmet",
	"item.upgrade.tooltip.laser_chestplate": "Laser Chestplate",
	"item.upgrade.tooltip.laser_leggings": "Laser Leggings",
	"item.upgrade.tooltip.laser_boots": "Laser Boots",
	"item.upgrade.tooltip.laser_armor": "Laser Armor",

	"container.lasermod.laser": "Laser",
	"container.lasermod.infuser": "Infuser",
	"container.lasermod.precision_assembler": "Precision Assembler",

	"container.lasermod.laser.button.options": "Options",
	"container.lasermod.laser.red": "Red",
	"container.lasermod.laser.green": "Green",
	"container.lasermod.laser.blue": "Blue",

	"death.block.laser": "%s has been incinerated by a laser",
	"death.armor.laser": "%1$s has been incinerated by %2$s's laser armor",

	"itemGroup.tabLaserMod": "Laser Mod",
	"itemGroup.tabLaserMod.upgrades": "Laser Mod Upgrades",

	"key.categories.lasermod": "Laser Mod",
	"lasermod.armor_toggle": "Armor Toggle",

	"subtitle.lasermod.laser_activate": "Laser Activate",
	"subtitle.lasermod.laser_active": "Laser Active Loop",
	"subtitle.lasermod.laser_deactivate": "Laser Deactivate",


	"manual.misc.see": "Also Check: ",

	"manual.blocks.header": "Blocks",
	"manual.blocks.laser.info.basic": "The most simple laser, it can be placed in any direction. supply it with a redstone signal to turn it on.",
	"manual.blocks.laser.info.extra": "The Laser can be modified using upgrades, when you open the laser's gui you will be able to place the upgrades inside.",
	"manual.blocks.laser_catcher.info.basic": "An simple device that gives off a redstone signal when an laser hits the receiver",
	"manual.blocks.infuser.info.basic": "This device is used to craft some of the base materials used for lasers",
	"manual.blocks.infuser.info.extra": "It can also be used to charge laser tools and armor!",
	"manual.blocks.mod_station.info.basic": "This device is used to apply upgrades to laser armor and laser tools!",
	"manual.blocks.projector.info.basic": "An advanced type of laser capable of projecting complex shapes, supply it with an redstone signal to turn it on",
	"manual.blocks.projector.info.extra": "Its fully modifiable through its gui, choose one of the presets and start modifying it, click the elements on the left to add them to the scene you're working on and select them to modify there properties",
	"manual.blocks.projector.sub.info.basic": "An advanced type of laser capable of projecting complex shapes, supply it with an redstone signal to turn it on",
	"manual.blocks.projector.sub.info.extra": "Its fully modifiable through its gui, choose one of the presets and start modifying it, click the elements on the left to add them to the scene you're working on and select them to modify there properties",
	"manual.blocks.controller.info.basic": "This device is used to control laser from an distance without needing an redstone signal!",
	"manual.blocks.controller.info.extra": "Link an laser to the controller using an Linker, when linked you can flip the big lever to turn it on and off. ",
	"manual.blocks.controller.sub.info.basic": "If the laser had an mode upgrade then lever in the top left can be used to cycle through the different modes, holding shift makes you cycle through them in the opposite direction.",
	"manual.blocks.controller.sub.info.extra": "If the laser has an color upgrade then the three small levers at the bottom can be used to change the color remotely",
	"manual.blocks.mirror.sub.info.basic": "This is only an simple mirror, what did you expect here?",
	"manual.blocks.mirror.sub.info.extra": "When an laser hits the mirror, it will redirect the laser into an different direction.",
	"manual.blocks.assembler.info.basic": "This device is used to craft most of the more complex items in the mod",
	"manual.blocks.assembler.info.extra": "One of the main uses is to craft upgrades for the various items and blocks!",
	"manual.blocks.adv_laser.info.basic": "An advanced version of the simple laser, it can be placed in any direction. supply it with a redstone signal to turn it on.",
	"manual.blocks.adv_laser.info.extra": "It can also be upgraded like the simple laser, but this device has de ability to rotate its laser emitter, to shoot it out at an angle!",
	"manual.blocks.adv_laser.info.note": "NOTE: This feature is Work In Progress, so it might not fucntion correctly for you!", 

	"manual.items.header": "Items",
	"manual.items.category.tools": "Laser Tools",
	"manual.items.category.armor": "Laser Armor",
	"manual.items.crystal.info.base": "The base material used to create anything laser related",
	"manual.items.crystal.info.extra": "This crystal has the ability to bend light into a straight beam of light",
	"manual.items.crystal.info.trivia": "L.A.S.E.R standing for Light Amplification by Stimulated Emission of Radiation",
	"manual.items.tools.info.base": "Special Tools created of an base which holds the laser crystal, and when activated acts like the corresponding tool",
	"manual.items.tools.info.extra": "Laser Tools can be upgraded using an modification station and upgrades",
	"manual.items.tools.info.usage": "To activate the tools, rightclick while holding them in your hand",
	"manual.items.armor.info.base": "Special Armor created of an base plate which holds the laser crystal, and when activated acts like actual armor",
	"manual.items.armor.info.extra": "This Armor can be upgraded using an modification station and upgrades",
	"manual.items.armor.info.usage": "To activate the armor, press '%s' while wearing the armor",
	"manual.items.ir_glasses.info.base": "These simple infrared glasses, when worn, can show invisible lasers to the wearer",
	"manual.items.linker.info.base": "An simple handheld device used for linking an laser to an laser controller.",
	"manual.items.linker.info.extra": "While sneaking, rightclick on an laser to save it in the linker, then rightclick on an laser controller, to link the laser and the controller together",

	"manual.upgrades.header": "Upgrades",
	"manual.upgrades.speed.info.base": "An simple upgrade to increase speed",
	"manual.upgrades.speed.info.context.machine": "When applied to an device, like an infuser or precision assembler, it will make the device faster at crafting",
	"manual.upgrades.speed.info.context.tools": "When applied to laser tools it acts as efficiency",
	"manual.upgrades.mining.info.base": "An upgrade which, when applied to an laser, will allow it to break blocks in the world",
	"manual.upgrades.mining.info.context.tools": "When applied to an laser pickaxe, shovel or axe, it will act as Hammering, which will break an area of 3x3 blocks when mining. To mine a single block with this upgrade just sneak while breaking.",
	"manual.upgrades.fire.info.base": "When applied to laser tools acts as fire aspect, setting fire to entities hit with the tool, or as auto melt which automatically smelts an block when broken if it can be smelted",
	"manual.upgrades.fire.info.context.laser": "When applied to laser armor, it acts as an fire aspect throns, when an entity hits an wearer of laser armor with this upgrade it will catch on fire",
	"manual.upgrades.color.info.base": "This upgrade allows you to color whatever it is applied to",
	"manual.upgrades.color.info.context.laser": "can be applied to lasers, to color the laser comming out of it",
	"manual.upgrades.color.info.context.tools": "can be applied to laser tool, to modify the color of the tool",
	"manual.upgrades.color.info.context.armor": "can be applied to laser armor, to modify the color of the armor piece",
	"manual.upgrades.mode.info.base": "An upgrade which can only be applied to an simple and advanced laser, which chages the look of the laser",
	"manual.upgrades.mode.info.extra": "This upgrade also allows an laser to be invisble, only to be seen by wearers of IR glasses",
	"manual.upgrades.mode.info.note": "NOTE: this is only visual and does not have an effect on the functionality of the laser",
	"manual.upgrades.damage.info.base": "When applied to an laser, it will increase the damage dealt by the laser to entities standing in the beam",
	"manual.upgrades.damage.info.context.tools": "When applied to laser tools, it acts as sharpness, increasing the damage dealt by the tool",
	"manual.upgrades.damage.info.context.armor": "When applied to laser Amor, it acts as throns, damaging an attacker of an wearer of the laser armor with this upgrade",
	"manual.upgrades.damage.info.note": "This upgrade has multiple tiers, every tier higher increases the effect of the upgrade",
	"manual.upgrades.silence.info.base": "This upgrade silences the laser",
	"manual.upgrades.silence.info.context.laser": "The laser will be completely silence with this upgrade, no startup or shutdown sounds, no winding sound of the device being active",
	"manual.upgrades.no_damage.info.base": "This upgrade when applied to an laser, will disable the damage dealt, so entities can safely stand inside the laser",
	"manual.upgrades.no_damage.info.note": "NOTE: This upgrade negates the effects of the damage upgrade!",
	"manual.upgrades.push.info.base": "When applied to an laser, it will push all the entities in the beam away from the laser origin",
	"manual.upgrades.push.info.context.tools": "When applied to laser tools, it acts as knockback, pushing entities that have been hit further back",
	"manual.upgrades.push.info.note": "NOTE: Having both push and pull upgrades installed on the same device negates the effect of both",
	"manual.upgrades.pull.info.base": "When applied to an laser, it will pulls all the entities in the beam closer to the origin of the laser",
	"manual.upgrades.pull.info.context.tools": "When applied to laser tools, it acts as attract, pulling entities that have been hit closer to make damaging faster",
	"manual.upgrades.pull.info.note": "NOTE: Having both push and pull upgrades installed on the same device negates the effect of both",
	"manual.upgrades.distance.info.base": "When applied to an laser, it increases the maximum distance of the laser",
	"manual.upgrades.distance.info.context.tools": "When applied to an Laser Omni Tool, it increases the maximum reach (distance) of the tool",
	"manual.upgrades.distance.info.note": "This upgrade has multiple tiers, every tier higher increases the effect of the upgrade",
	"manual.upgrades.airtight.info.base": "This upgrade can only be applied to the laser helmet",
	"manual.upgrades.airtight.info.extra": "When applied it will seal the helmet so you can breath underwater",
	"manual.upgrades.airtight.info.integration.aerospace": "It can also be an standin for an oxygen mask to go to space!",
	"manual.upgrades.airtight.info.note": "NOTE: The helmet needs to be active for this upgrade to take effect",
	"manual.upgrades.capacity.info.base": "When applied to lase tools or laser armor, it increases the maximum charge that device can hold",
	"manual.upgrades.capacity.info.note": "This upgrade has multiple tiers, every tier higher increases the effect of the upgrade",

	"manual.integration.header": "Integration",
	"manual.integration.cc.header": "ComputerCraft Integration",
	"manual.integration.cc.info": "Connect a computer to a laser controller to get access to the functions specific to the block connected to the controller",
	"manual.integration.cc.base.header": "Controller Base Functions",
	"manual.integration.cc.laser.header": "Laser Functions",
	"manual.integration.cc.adv_laser.header": "Advanced Laser Functions",
	"manual.integration.cc.projector.header": "Laser Projector Functions",
	"manual.integration.cc.base.title": "ComputerCraft Base Functions",
	"manual.integration.cc.laser.title": "ComputerCraft Laser Functions",
	"manual.integration.cc.adv_laser.title": "ComputerCraft Advanced Laser Functions",
	"manual.integration.cc.projector.title": "ComputerCraft Projector Functions",

	"manual.integration.cc.base.connect.name": "connect§d(§bx §f: §3number§f, §by §f: §3number§f, §bz §f: §3number§d) §f: §3boolean",
	"manual.integration.cc.base.connect.desc": "this functions takes 3 arguments: x, y, and z which represent a block position that the controller should try to connect to. Note this disconnects the controller if it was already connected to something. It returns a boolean(true/false) indicating whether the connection was succesfull",
	"manual.integration.cc.base.disconnect.name": "disconnect§d() §f: §3boolean",
	"manual.integration.cc.base.disconnect.desc": "Tries to disconnect the controller if it was connected, it returns a boolean(true/false) indicating whether the controller was succesfully disconnected",
	"manual.integration.cc.base.isConnected.name": "isConnected§d() §f: §3boolean",
	"manual.integration.cc.base.isConnected.desc": "returns a boolean(true/false) indicating whether there is a device connected to it",
	"manual.integration.cc.base.getDeviceType.name": "getDeviceType§d() §f: §3number",
	"manual.integration.cc.base.getDeviceType.desc": "returns the number of the type of the connected device, throws an error if the controller is not connected. Type 1 = Laser, Type 2 = Laser Projector, Type 3 = Advanced Laser",
	"manual.integration.cc.base.getDeviceName.name": "getDeviceName§d() §f: §3string",
	"manual.integration.cc.base.getDeviceName.desc": "gets the name of the device, throws an error if the controller is not connected. for example: if the controller is connected to a laser, the return value is 'Laser'",
	"manual.integration.cc.base.setActive.name": "setActive§d(§bvalue §f: §3boolean§d)",
	"manual.integration.cc.base.setActive.desc": "it can only be called it a device is connected, and it turns a device on or off depending on the given boolean value. it doesn't return anything, but it errors if no device is connected",
	"manual.integration.cc.laser.setColor.name": "setColor§d(§br §f: §3number§f, §bg §f: §3number§f, §bb §f: §3number§d)",
	"manual.integration.cc.laser.setColor.desc": "this functions sets the color of the laser using the r, g and b parameters of the function to set the color. it can only be called if a type of laser is connected, and it will only work if the laser is colorable, which means it has the color upgrade.",
	"manual.integration.cc.laser.setMode.name": "setMode§d(§bmode §f: §3number§d)",
	"manual.integration.cc.laser.setMode.desc": "this functions sets the mode of the laser using the mode parameter of the function to set the mode of the laser. the mode parameter must be in range of [0~%1$s]. where %2$s it can only be called if a type of laser is connected, and it will only work if the laser as different modes, which means it has the mode upgrade.",
	"manual.integration.cc.laser.canBeColored.name": "canBeColored§d() §f: §3boolean",
	"manual.integration.cc.laser.canBeColored.desc": "returns a boolean(true/fale) indicating whether the laser can be colored, basically asking if the laser has the color upgrade. it can only be called if a type of laser is connected.",
	"manual.integration.cc.advanced_laser.setDirection.name": "setDirection§d(§bx §f: §3number§f, §by §f: §3number§f, §bz §f: §3number§d)",
	"manual.integration.cc.advanced_laser.setDirection.desc": "this functions sets the direction of a advanced laser where x, y and z represent a block position, which is the ending position of the laser. that means that the laser will point in toward that block position. note: the laser may not reach that block position or may go past that block position, its only an indicator of the direction. it can only be called if an advanced laser is connected.",
	"manual.integration.cc.projector.setTemplate.name": "setTemplate§d(§btemplate §f: §3string§d)§r \n§rsetTemplate§d(§btemplate §f: §3number§d)",
	"manual.integration.cc.projector.setTemplate.desc": "it sets the template of the projector, its parameter string can be any of %2$s, which is the name of the template the projector will be set to. for its number parameter it must be in range of [0~%1$s], which is the index of the template to set it to. Note this resets everything from the scene that was setup to the template. it can only be called if an laser projector is connected.",
	"manual.integration.cc.projector.getWidgets.name": "getWidgets§d() §f: §3widget§d[]",
	"manual.integration.cc.projector.getWidgets.desc": "gets a list of all of the widgets of the projector. any modifications made to any of the individual widgets will automatically be updated to the projector",
	"manual.integration.cc.projector.getWidgetsOfType.name": "getWidgetsOfType§d(§btype §f: §3string§d) §f: §3widget§d[]",
	"manual.integration.cc.projector.getWidgetsOfType.desc": "gets a list of all of the widgets of a certain type, supplied by the parameter from the projector. the valid types as parameter are: %2$s, any other value will result in an error. any modifications made to any of the individual widgets will automatically be updated to the projector",
	"manual.integration.cc.projector.createWidget.name": "createWidget§d(§btype §f: §3string§d) §f: §3widget",
	"manual.integration.cc.projector.createWidget.desc": "creates a new widget of a certain type, defined by the parameter. this widget is automatically added to the projector. the valid types as parameter are: %2$s, any other value will result in an error. it returns the widget that was created, any modifications made that widgets will automatically be updated to the projector",
	"manual.integration.cc.projector.removeWidget.name": "removeWidget§d(§bwidgetId §f: §3string§d) §f: §3boolean",
	"manual.integration.cc.projector.removeWidget.desc": "removes a widget from the projector, all references to that widget will not work anymore, note that those references will cause errors if you use any of their functions. the parameter is the id of the widget that needs to be removed, you can get the id of a widget by calling the '§agetId§f' function on the widget",
	
	
	"manual.integration.cc.widget.header": "Widget Object Functions",
	"manual.integration.cc.widget.title": "ComputerCraft Widget Functions",
	"manual.integration.cc.widget.getX.name": "getX§d() §f: §3number",
	"manual.integration.cc.widget.getX.desc": "gets the X coordinate of the widget",
	
	"manual.integration.cc.widget.getY.name": "getY§d() §f: §3number",
	"manual.integration.cc.widget.getY.desc": "gets the Y coordinate of the widget",
	
	"manual.integration.cc.widget.getZ.name": "getZ§d() §f: §3number",
	"manual.integration.cc.widget.getZ.desc": "gets the Z coordinate of the widget",
	
	"manual.integration.cc.widget.getWidth.name": "getWidth§d() §f: §3number",
	"manual.integration.cc.widget.getWidth.desc": "gets the width of the widget",
	
	"manual.integration.cc.widget.getHeight.name": "getHeight§d() §f: §3number",
	"manual.integration.cc.widget.getHeight.desc": "gets the height of the widget",
	
	"manual.integration.cc.widget.getDepth.name": "getDepth§d() §f: §3number",
	"manual.integration.cc.widget.getDepth.desc": "gets the depth of the widget",
	
	"manual.integration.cc.widget.getRotation.name": "getRotation§d() §f: §3number",
	"manual.integration.cc.widget.getRotation.desc": "gets the rotation of the widget in degrees",
	
	"manual.integration.cc.widget.getScale.name": "getScale§d() §f: §3number",
	"manual.integration.cc.widget.getScale.desc": "gets the scale of the widget",
	
	"manual.integration.cc.widget.getAlpha.name": "getAlpha§d() §f: §3number",
	"manual.integration.cc.widget.getAlpha.desc": "gets the alpha of the widget which basically means its opacity",
	
	"manual.integration.cc.widget.getType.name": "getType§d() §f: §3string",
	"manual.integration.cc.widget.getType.desc": "gets the widgets type, which will be one of %2$s",
	
	"manual.integration.cc.widget.getId.name": "getId§d() §f: §3string",
	"manual.integration.cc.widget.getId.desc": "gets the id of the widget",
	
	"manual.integration.cc.widget.setX.name": "setX§d(§bxValue §f: §3number§d)§r",
	"manual.integration.cc.widget.setX.desc": "sets the X position of the widget, which is the left and right axis",
	
	"manual.integration.cc.widget.setY.name": "setY§d(§byValue §f: §3number§d)§r",
	"manual.integration.cc.widget.setY.desc": "sets the Y position of the widget, which is the up and down axis",
	
	"manual.integration.cc.widget.setZ.name": "setZ§d(§bzValue §f: §3number§d)§r",
	"manual.integration.cc.widget.setZ.desc": "sets the Z position of the widget, which is the back and front axis",
	
	"manual.integration.cc.widget.setWidth.name": "setWidth§d(§bwidth §f: §3number§d)§r",
	"manual.integration.cc.widget.setWidth.desc": "sets the width of the widget, which is only applicable on widget that allow non linear scaling. §bThis only works on shapes§r",
	
	"manual.integration.cc.widget.setHeight.name": "setHeight§d(§bheight §f: §3number§d)§r",
	"manual.integration.cc.widget.setHeight.desc": "sets the height of the widget, which is only applicable on widget that allow non linear scaling. §bThis only works on shapes§r",
	
	"manual.integration.cc.widget.setDepth.name": "setDepth§d(§bdepth §f: §3number§d)§r",
	"manual.integration.cc.widget.setDepth.desc": "sets the depth of the widget. the depth defines the size in the z-axis of shapes, which is only applicable on widget that allow non linear scaling. §bThis only works on shapes§r",
	
	"manual.integration.cc.widget.setRotation.name": "setRotation§d(§brotation §f: §3number§d)§r",
	"manual.integration.cc.widget.setRotation.desc": "sets the rotation of the widget around the y axis in degrees",
	
	"manual.integration.cc.widget.setScale.name": "setScale§d(§bscale §f: §3number§d)§r",
	"manual.integration.cc.widget.setScale.desc": "sets the linear scale of the widget, which means it scales the x, y and z axis all at the same time (this works for all widgets)",
	
	"manual.integration.cc.widget.setAlpha.name": "setAlpha§d(§balpha §f: §3number§d)§r",
	"manual.integration.cc.widget.setAlpha.desc": "sets the alpha of the widget, which describes how translucent the widget is. Note this is from 0-1 where 1 is fully solid and 0 is invisible"
}